"""
This type stub file was generated by pyright.
"""

import aiohttp
from typing import Any, Coroutine, Dict, Iterable, List, Optional, Sequence, Union

__all__ = ["HTTPClient"]
_LOGGER = ...
class HTTPClient:
    """Represents an HTTP client sending HTTP requests to the Top.gg API.

    .. _aiohttp session: https://aiohttp.readthedocs.io/en/stable/client_reference.html#client-session

    Args:
        token (str)
            A Top.gg API Token.

    Keyword Arguments:
        session: `aiohttp session`_
            The `aiohttp session`_ used for requests to the API.
        **kwargs:
            Arbitrary kwargs to be passed to :class:`aiohttp.ClientSession`.
    """
    def __init__(self, token: str, *, session: Optional[aiohttp.ClientSession] = ..., **kwargs: Any) -> None:
        ...
    
    async def request(self, method: str, endpoint: str, **kwargs: Any) -> dict:
        """Handles requests to the API."""
        ...
    
    async def close(self) -> None:
        ...
    
    async def post_guild_count(self, guild_count: Optional[Union[int, List[int]]], shard_count: Optional[int], shard_id: Optional[int]) -> None:
        """Posts bot's guild count and shards info on Top.gg."""
        ...
    
    def get_weekend_status(self) -> Coroutine[Any, Any, dict]:
        """Gets the weekend status from Top.gg."""
        ...
    
    def get_guild_count(self, bot_id: int) -> Coroutine[Any, Any, dict]:
        """Gets the guild count of the given Bot ID."""
        ...
    
    def get_bot_info(self, bot_id: int) -> Coroutine[Any, Any, dict]:
        """Gets the information of a bot under given bot ID on Top.gg."""
        ...
    
    def get_bot_votes(self, bot_id: int) -> Coroutine[Any, Any, Iterable[dict]]:
        """Gets your bot's last 1000 votes on Top.gg."""
        ...
    
    def get_bots(self, limit: int, offset: int, sort: str, search: Dict[str, str], fields: Sequence[str]) -> Coroutine[Any, Any, dict]:
        """
        Warning:
            This function is deprecated.
        """
        ...
    
    def get_user_info(self, user_id: int) -> Coroutine[Any, Any, dict]:
        """Gets an object of the user on Top.gg."""
        ...
    
    def get_user_vote(self, bot_id: int, user_id: int) -> Coroutine[Any, Any, dict]:
        """Gets info whether the user has voted for your bot."""
        ...
    


def to_json(obj: Any) -> str:
    ...

