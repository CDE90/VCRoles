"""
This type stub file was generated by pyright.
"""

import asyncio
import collections
from types import TracebackType
from typing import Any, Awaitable, Callable, List, Optional, Type

class AsyncRateLimiter:
    """
    Provides rate limiting for an operation with a configurable number of requests for a time period.
    """
    __lock: asyncio.Lock
    callback: Optional[Callable[[float], Awaitable[Any]]]
    max_calls: int
    period: float
    calls: collections.deque
    def __init__(self, max_calls: int, period: float = ..., callback: Optional[Callable[[float], Awaitable[Any]]] = ...) -> None:
        ...
    
    async def __aenter__(self) -> AsyncRateLimiter:
        ...
    
    async def __aexit__(self, exc_type: Type[BaseException], exc_val: BaseException, exc_tb: TracebackType) -> None:
        ...
    


class AsyncRateLimiterManager:
    rate_limiters: List[AsyncRateLimiter]
    def __init__(self, rate_limiters: List[AsyncRateLimiter]) -> None:
        ...
    
    async def __aenter__(self) -> AsyncRateLimiterManager:
        ...
    
    async def __aexit__(self, exc_type: Type[BaseException], exc_val: BaseException, exc_tb: TracebackType) -> None:
        ...
    


